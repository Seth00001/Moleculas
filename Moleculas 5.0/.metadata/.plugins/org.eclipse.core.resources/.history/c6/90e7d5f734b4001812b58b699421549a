package engine;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

import Helpers.Point;

public class GridHelper {

	public Grid grid;
	
	
	public GridHelper() {
	}
	
	
	public void exportForVMD() throws IOException {
		
		BufferedWriter writer = new BufferedWriter(new FileWriter(".txt"));
		
		for(Point p : grid.queue) {
			writer.write("ATOM    100  N   VAL A  25     " + (form(p.x)) + " " + (form(p.y)) + " " + (form(p.z)) + "  1.00 12.00      A1   C   " + System.lineSeparator());
		}
		writer.flush();
		writer.close();
	}
	
	public String form(int number) {
		String s = Double.toString(number / 10.0);

		while (s.indexOf(".") < 3) {
			s = "0" + s;
		}

		while (s.length() < 7) {
			s += "0";
		}

		return s;
	}

	
	
	
	
	public void rearrangeGridQueue() {
		if(grid != null) {
			int x, y; //future coordinates of elements
			Point temp;
			
			for(int i = 0; i < grid.queue.size(); i++) {
				x = grid.random.nextInt(grid.queue.size());
				y = grid.random.nextInt(grid.queue.size());
				
				temp = grid.queue.get(x);
				grid.queue.set(x, grid.queue.get(y));
				grid.queue.set(x, temp);
			}
		}
	}
	
}
